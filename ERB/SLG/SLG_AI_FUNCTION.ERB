;-------------------------------------------------
;DESC  :ある勢力における最善の武将・守将の組み合わせをBEST_COMMANDERに格納して返す
;-------------------------------------------------
@CHECK_BEST_COMMANDER(勢力, コンボ無視)
#DIM CHECK_IS_FREE, MAX_CHARA_NUM
#DIM SCORE_SUM, MAX_CHARA_NUM
#DIM コンボ無視
#DIM 勢力
#DIM 候補数
#DIM 候補

VARSET CHECK_IS_FREE, -1
VARSET BEST_COMMANDER, -1
VARSET SCORE_SUM, __INT_MIN__

DUMPRAND

候補数 = 0
FOR LOCAL:0, 0, MIN(CHARANUM, MAX_CHARA_NUM)
	;自国の士官のみ考慮
	IF CFLAG:(LOCAL:0):所属 == 勢力 && TMP_IS_FREE:(LOCAL:0):0 == 0
		;MASTER麾下の武将は、除外フラグをたてていたら除外する
		SIF 勢力 == CFLAG:MASTER:所属 && CFLAG:(LOCAL):最強編成除外フラグ
			CONTINUE
		;自由に行動可能なキャラ番号をCHECK_IS_FREEに順番に格納
		CHECK_IS_FREE:候補数 = LOCAL:0
		候補数 ++
	ENDIF
NEXT

;候補がだれもいなければ戻す
IF 候補数 == 0
	INITRAND
	RETURN 1
ENDIF

FOR LOCAL:0, 0, 候補数

	;AIタイプごとの重み付けをしてスコアリングする
	LOCAL:2 = CHECK_IS_FREE:LOCAL

	{
		SCORE_SUM:LOCAL = 
			ABL_POWER(ABL:(LOCAL:2):武闘, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):0 / 100 + 
			ABL_POWER(ABL:(LOCAL:2):防衛, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):1 / 100 +
			ABL_POWER(ABL:(LOCAL:2):知略, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):2 / 100 +
			ABL_POWER(ABL:(LOCAL:2):妖術, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):3 / 100 +
			ABL_POWER(TMP_CHARA_STARS:(LOCAL:2) * 10, LOCAL:2) * AI_PRIORITY:(COUNTRY_AI_TYPE:勢力):4 / 100 +
			ABL_POWER(ABL:(LOCAL:2):料理, LOCAL:2) +
			ABL_POWER(ABL:(LOCAL:2):歌唱, LOCAL:2)
	}

NEXT

SIF !コンボ無視
	CALL CHECK_BEST_COMMANDER_COMBO(CHECK_IS_FREE, SCORE_SUM, 候補数)

;評価点の高い順に設定
FOR LOCAL, 0, MAX_UNIT_COMMANDER
	SIF MAXARRAY(SCORE_SUM) == __INT_MIN__
		BREAK
	LOCAL:1 = FINDELEMENT(SCORE_SUM, MAXARRAY(SCORE_SUM))
	BEST_COMMANDER:LOCAL = CHECK_IS_FREE:(LOCAL:1)
	SCORE_SUM:(LOCAL:1) = __INT_MIN__
NEXT

INITRAND

RETURN 1

;-------------------------------------------------
;DESC  :CHECK_COMMANDER_BESTにおいて、特定の組み合わせを最優先させる
;:		たとえばホップオマイサムセブン発動狙いの針妙丸単騎運用など
;-------------------------------------------------
@CHECK_BEST_COMMANDER_COMBO(CHECK_IS_FREE, SCORE_SUM, FREE_COUNT)
#DIM REF CHECK_IS_FREE
#DIM REF SCORE_SUM
#DIM FREE_COUNT
#DIM TMP_SCORE_SUM, MAX_CHARA_NUM
#DIM BEST_COMMANDER_CANDIDATE, MAX_UNIT_COMMANDER

VARSET BEST_COMMANDER_CANDIDATE

ARRAYCOPY "SCORE_SUM", "TMP_SCORE_SUM"

;評価点の高い順に設定
FOR LOCAL, 0, MAX_UNIT_COMMANDER
	SIF MAXARRAY(TMP_SCORE_SUM) == __INT_MIN__
		BREAK
	LOCAL:1 = FINDELEMENT(TMP_SCORE_SUM, MAXARRAY(TMP_SCORE_SUM))
	BEST_COMMANDER_CANDIDATE:LOCAL = CHECK_IS_FREE:(LOCAL:1)
	TMP_SCORE_SUM:(LOCAL:1) = __INT_MIN__
NEXT

;主人公優先設定がオンの場合、最優先で選択されるように
IF FINDELEMENT(CHECK_IS_FREE, MASTER) != -1 && CONFIG:310 == 1
	LOCAL:1 = FINDELEMENT(CHECK_IS_FREE, MASTER)
	SCORE_SUM:(LOCAL:1) = __INT_MAX__
;ホップオマイサムセブン
ELSEIF FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("針妙丸")) != -1
	;一人運用の場合、対象キャラ以外のスコアを全て__INT_MIN__にする
	LOCAL:1 = NAME_TO_CHARA("針妙丸")
	FOR LOCAL, 0, FREE_COUNT
		SIF CHECK_IS_FREE:LOCAL == LOCAL:1
			CONTINUE
		SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;テケテン
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("妖夢")) != -1
	LOCAL:1 = NAME_TO_CHARA("妖夢")
	FOR LOCAL, 0, FREE_COUNT
		SIF CHECK_IS_FREE:LOCAL == LOCAL:1
			CONTINUE
		SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;諏訪子・神奈子・ヒソウテンソク召喚
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("早苗")) != -1
	LOCAL:1 = NAME_TO_CHARA("早苗")
	;二人運用（一人召喚スキル持ちなど）の場合、
	;候補の中から本人以外で末尾にくるやつを一人削除した後、
	;候補の中にないキャラのスコアを全て__INT_MIN__にする
	FOR LOCAL, MAX_UNIT_COMMANDER - 1, -1
		SIF BEST_COMMANDER_CANDIDATE:LOCAL == LOCAL:1
			CONTINUE
		BEST_COMMANDER_CANDIDATE:LOCAL = -1
		BREAK
	NEXT
	FOR LOCAL, 0, FREE_COUNT
		SIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, CHECK_IS_FREE:LOCAL) == -1
			SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;式神・八雲藍
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("紫")) != -1
	LOCAL:1 = NAME_TO_CHARA("紫")
	FOR LOCAL, MAX_UNIT_COMMANDER - 1, -1
		SIF BEST_COMMANDER_CANDIDATE:LOCAL == LOCAL:1
			CONTINUE
		BEST_COMMANDER_CANDIDATE:LOCAL = -1
		BREAK
	NEXT
	FOR LOCAL, 0, FREE_COUNT
		SIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, CHECK_IS_FREE:LOCAL) == -1
			SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;守り守られし大輪
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("一輪")) != -1
	LOCAL:1 = NAME_TO_CHARA("一輪")
	FOR LOCAL, MAX_UNIT_COMMANDER - 1, -1
		SIF BEST_COMMANDER_CANDIDATE:LOCAL == LOCAL:1
			CONTINUE
		BEST_COMMANDER_CANDIDATE:LOCAL = -1
		BREAK
	NEXT
	FOR LOCAL, 0, FREE_COUNT
		SIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, CHECK_IS_FREE:LOCAL) == -1
			SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;百鬼妖界の門
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("マミゾウ")) != -1
	LOCAL:1 = NAME_TO_CHARA("マミゾウ")
	FOR LOCAL, 0, FREE_COUNT
		SIF CHECK_IS_FREE:LOCAL == LOCAL:1
			CONTINUE
		SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
	;独り阿吽の呼吸
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("あうん")) != -1
	LOCAL:1 = NAME_TO_CHARA("あうん")
	FOR LOCAL, MAX_UNIT_COMMANDER - 1, -1
		SIF BEST_COMMANDER_CANDIDATE:LOCAL == LOCAL:1
			CONTINUE
		BEST_COMMANDER_CANDIDATE:LOCAL = -1
		BREAK
	NEXT
	FOR LOCAL, 0, FREE_COUNT
		SIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, CHECK_IS_FREE:LOCAL) == -1
			SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;埴輪召喚
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("磨弓")) != -1
	LOCAL:1 = NAME_TO_CHARA("磨弓")
	FOR LOCAL, MAX_UNIT_COMMANDER - 1, -1
		SIF BEST_COMMANDER_CANDIDATE:LOCAL == LOCAL:1
			CONTINUE
		BEST_COMMANDER_CANDIDATE:LOCAL = -1
		BREAK
	NEXT
	FOR LOCAL, 0, FREE_COUNT
		SIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, CHECK_IS_FREE:LOCAL) == -1
			SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;鬼形方形術
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("袿姫")) != -1
	LOCAL:1 = NAME_TO_CHARA("袿姫")
	FOR LOCAL, 0, FREE_COUNT
		SIF CHECK_IS_FREE:LOCAL == LOCAL:1
			CONTINUE
		SCORE_SUM:LOCAL = __INT_MIN__
	NEXT
;やってやんよ・われにおまかせを
{
	ELSEIF (FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("神子")) != -1 ||
		FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("屠自古")) != -1 ||
		FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("布都")) != -1) &&
		(FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("神子")) != -1 &&
		FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("屠自古")) != -1 &&
		FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("布都")) != -1)
		
}
	;ペア・トリオ運用の場合、
	;「組み合わせ参加者のいずれかが編成候補に入っている」かつ
	;「組み合わせ候補者全員がフリーな状態である」を条件とする
	;処理自体は単騎運用に準ずる
	LOCAL:1 = NAME_TO_CHARA("神子")
	LOCAL:2 = NAME_TO_CHARA("屠自古")
	LOCAL:3 = NAME_TO_CHARA("布都")
	FOR LOCAL, 0, FREE_COUNT
		SIF GROUPMATCH(CHECK_IS_FREE:LOCAL, LOCAL:1, LOCAL:2, LOCAL:3)
			SCORE_SUM:LOCAL = __INT_MAX__
	NEXT
;コンチェルトグロッソ
{
	ELSEIF (FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("ルナサ")) != -1 ||
		FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("メルラン")) != -1 ||
		FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("リリカ")) != -1) &&
		(FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("ルナサ")) != -1 &&
		FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("メルラン")) != -1 &&
		FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("リリカ")) != -1)
}
	LOCAL:1 = NAME_TO_CHARA("ルナサ")
	LOCAL:2 = NAME_TO_CHARA("メルラン")
	LOCAL:3 = NAME_TO_CHARA("リリカ")
	FOR LOCAL, 0, FREE_COUNT
		SIF GROUPMATCH(CHECK_IS_FREE:LOCAL, LOCAL:1, LOCAL:2, LOCAL:3)
			SCORE_SUM:LOCAL = __INT_MAX__
	NEXT
;マリス砲
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("アリス")) && FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("魔理沙"))
	LOCAL:1 = NAME_TO_CHARA("アリス")
	LOCAL:2 = NAME_TO_CHARA("魔理沙")
	FOR LOCAL, 0, FREE_COUNT
		SIF GROUPMATCH(CHECK_IS_FREE:LOCAL, LOCAL:1, LOCAL:2)
			SCORE_SUM:LOCAL = __INT_MAX__
	NEXT
;最初で最後の無名の弾幕
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("ヘカーティア")) && FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("純狐"))
	LOCAL:1 = NAME_TO_CHARA("ヘカーティア")
	LOCAL:2 = NAME_TO_CHARA("純狐")
	FOR LOCAL, 0, FREE_COUNT
		SIF GROUPMATCH(CHECK_IS_FREE:LOCAL, LOCAL:1, LOCAL:2)
			SCORE_SUM:LOCAL = __INT_MAX__
	NEXT
;レベルティターニア
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("アリス")) && FINDELEMENT(CHECK_IS_FREE, NAME_TO_CHARA("ゴリアテ人形"))
	LOCAL:1 = NAME_TO_CHARA("アリス")
	LOCAL:2 = NAME_TO_CHARA("ゴリアテ人形")
	FOR LOCAL, 0, FREE_COUNT
		SIF GROUPMATCH(CHECK_IS_FREE:LOCAL, LOCAL:1, LOCAL:2)
			SCORE_SUM:LOCAL = __INT_MAX__
	NEXT
;七色の人形遣い
ELSEIF FINDELEMENT(BEST_COMMANDER_CANDIDATE, NAME_TO_CHARA("アリス"))
	LOCAL:1 = NAME_TO_CHARA("アリス")
	FOR LOCAL, 0, FREE_COUNT
		SIF HAS_TAG(CHECK_IS_FREE:LOCAL, タグ_人形) || CHECK_IS_FREE:LOCAL == LOCAL:1
			SCORE_SUM:LOCAL = __INT_MAX__
	NEXT
ENDIF

;-------------------------------------------------
;DESC  :CHECK_COMMANDER_BEST_COMBOで作った組み合わせを、
;:		SLG_AI_FILL_UNITなどで崩されないようにするための処置
;-------------------------------------------------
@CHECK_UNIT_COMBO(勢力, 部隊)
#DIM 勢力
#DIM 部隊

CALL GET_UNIT_COMMANDER_ALL(勢力, 部隊)

SIF FINDELEMENT(RESULT, NAME_TO_CHARA("針妙丸"), 0, 3) != -1
	RETURN 1
SIF FINDELEMENT(RESULT, NAME_TO_CHARA("妖夢"), 0, 3) != -1
	RETURN 1
SIF FINDELEMENT(RESULT, NAME_TO_CHARA("早苗"), 0, 3) != -1
	RETURN 1
SIF FINDELEMENT(RESULT, NAME_TO_CHARA("紫"), 0, 3) != -1
	RETURN 1
SIF FINDELEMENT(RESULT, NAME_TO_CHARA("一輪"), 0, 3) != -1
	RETURN 1
SIF FINDELEMENT(RESULT, NAME_TO_CHARA("あうん"), 0, 3) != -1
	RETURN 1
SIF FINDELEMENT(RESULT, NAME_TO_CHARA("マミゾウ"), 0, 3) != -1
	RETURN 1
SIF FINDELEMENT(RESULT, NAME_TO_CHARA("袿姫"), 0, 3) != -1
	RETURN 1
{
	SIF FINDELEMENT(RESULT, NAME_TO_CHARA("神子"), 0, 3) != -1 &&
		FINDELEMENT(RESULT, NAME_TO_CHARA("屠自古"), 0, 3) != -1 &&
		FINDELEMENT(RESULT, NAME_TO_CHARA("布都"), 0, 3) != -1
}
	RETURN 1
{
	SIF FINDELEMENT(RESULT, NAME_TO_CHARA("リリカ"), 0, 3) != -1 &&
		FINDELEMENT(RESULT, NAME_TO_CHARA("メルラン"), 0, 3) != -1 &&
		FINDELEMENT(RESULT, NAME_TO_CHARA("ルナサ"), 0, 3) != -1
}
	RETURN 1
{
	SIF FINDELEMENT(RESULT, NAME_TO_CHARA("アリス"), 0, 3) != -1 &&
		FINDELEMENT(RESULT, NAME_TO_CHARA("魔理沙"), 0, 3) != -1
}
	RETURN 1
{
	SIF FINDELEMENT(RESULT, NAME_TO_CHARA("アリス"), 0, 3) != -1 &&
		FINDELEMENT(RESULT, NAME_TO_CHARA("ゴリアテ人形"), 0, 3) != -1
}
	RETURN 1

{
	SIF FINDELEMENT(RESULT, NAME_TO_CHARA("ヘカーティア"), 0, 3) != -1 &&
		FINDELEMENT(RESULT, NAME_TO_CHARA("純狐"), 0, 3) != -1
}
	RETURN 1
RETURN 0

;-------------------------------------------------
;都市ARG:0に最適な守将を配置。ARG:1を1にすると二人設定できる。
;※直前に @TMP_CREATE_IS_FREE_MAP 関数を呼び出してから使用こと
;-------------------------------------------------
@SET_CITY_COMMANDER_BEST(ARG:0, ARG:1 = 0)
#DIM LCOUNT
CALL CHECK_BEST_COMMANDER(CITY_OWNER:(ARG:0))
FOR LCOUNT:0, 0, (ARG:1 ? MAX_CITY_COMMANDER # 1)
	CALL SET_CITY_COMMANDER(ARG:0, LCOUNT:0, BEST_COMMANDER:(LCOUNT:0))
NEXT
