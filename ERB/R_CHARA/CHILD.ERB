;子供の誕生関連の処理

;-------------------------
;ARG:0を母親として子供を生成する
;-------------------------
@CREATE_CHILD(ARG:0)
;ターゲットを退避
LOCAL:0 = TARGET

SIF !CAN_ADD_CHILD()
	RETURN -1

;キャラを追加
ADDVOIDCHARA

;作成したキャラをターゲットにする
TARGET = CHARANUM - 1

;NOの設定
NO = FLAG:子供カウント + MIN_NO_CHILD
FLAG:子供カウント ++

;父親・母親のIDを設定
CFLAG:母親 = GET_ID(ARG:0)
CFLAG:父親 = CFLAG:(ARG:0):子の父親

;素質と能力の決定
CALL CHILD_SETTING

;初期設定(※素質決定後に行う)
CALL INIT_NEWCHARA(TARGET)

CALL RANDOM_CHARA_SKILL_SETTING
CALL CHILD_SKILL_SETTING
CALL RANDOM_CHARA_CLOTH_SETTING()
CALL CHILD_TAG_SETTING()
;ターゲットの再設定
TARGET = LOCAL:0
RETURN CHARANUM - 1

;-------------------------
;子供が生誕時の処理
;-------------------------
@CHILD_SETTING
#DIM EAR
#DIM TAIL

;両親の取得
LOCAL:5 = ID_TO_CHARA(CFLAG:父親)
LOCAL:6 = ID_TO_CHARA(CFLAG:母親)

;固定の素質を付与
TALENT:童貞 = 1
TALENT:処女 = 1
TALENT:無接吻経験 = 1
TALENT:後庭処女 = 1
TALENT:幼兒 = 1
TALENT:体格 = 体格_子供

;設定された男性率に応じて性別を設定
IF RAND:100 < CONFIG:4
	IF RAND:30 == 0
		TALENT:性別 = 4
	ELSEIF RAND:30 == 0
		TALENT:性別 = 3
	ELSE
		TALENT:性別 = 0
	ENDIF
ELSE
	IF RAND:20 == 0
		TALENT:性別 = 2
	ELSE
		TALENT:性別 = 1
	ENDIF
	CALL SET_BUSTSIZE(TARGET, -2)
ENDIF

;■BASE値の決定
IF (LOCAL:5 >= 0 && RAND:2) || LOCAL:6 < 0
	MAXBASE:体力 = MAXBASE:(LOCAL:5):体力 + (RAND:5 - 2) * 100
ELSE
	MAXBASE:体力 = MAXBASE:(LOCAL:6):体力 + (RAND:5 - 2) * 100
ENDIF
MAXBASE:体力 = LIMIT(MAXBASE:体力, 1200, 2500)

IF (LOCAL:5 >= 0 && RAND:2) || LOCAL:6 < 0
	MAXBASE:気力 = MAXBASE:(LOCAL:5):気力 + (RAND:5 - 2) * 100
ELSE
	MAXBASE:気力 = MAXBASE:(LOCAL:6):気力 + (RAND:5 - 2) * 100
ENDIF
MAXBASE:気力 = LIMIT(MAXBASE:気力, 1000, 2200)

BASE:体力 = MAXBASE:体力
BASE:気力 = MAXBASE:気力

;精神力は仮設定
MAXBASE:精神力 = 500
BASE:精神力 = MAXBASE:精神力

;■戦闘系能力と成長型の設定
LOCAL:7 = RAND:5
IF LOCAL:5 >= 0 && LOCAL:7 < 2
	LOCAL:8 = LOCAL:5
ELSEIF LOCAL:6 >= 0 && LOCAL:7 < 4
	LOCAL:8 = LOCAL:6
ELSE
	LOCAL:8 = -1
ENDIF

IF LOCAL:8 >= 0
	TALENT:成長型 = TALENT:(LOCAL:8):成長型

	ABL:武闘 = RAND:8 + 1 + ABL:(LOCAL:8):武闘 / 10
	ABL:防衛 = RAND:8 + 1 + ABL:(LOCAL:8):防衛 / 10
	ABL:知略 = RAND:8 + 1 + ABL:(LOCAL:8):知略 / 10
	ABL:政治 = RAND:8 + 1 + ABL:(LOCAL:8):政治 / 10
	ABL:歌唱 = RAND:21
	ABL:料理 = MAX(RAND:11 - 5, 0)
ELSE
	TALENT:成長型 = RAND:9

	ABL:武闘 = RAND:12 + 1
	ABL:防衛 = RAND:12 + 1
	ABL:知略 = RAND:12 + 1
	ABL:政治 = RAND:12 + 1
	ABL:歌唱 = RAND:21
	ABL:料理 = MAX(RAND:11 - 5, 0)
ENDIF

;■素質の決定
;臆病、気丈
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 10, 12, 12, 12
;反抗的、素直
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 11, 13, 20, 20
;老実
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 14, 7
;プライド高い、プライド低い
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 15, 17, 12, 3
;傲慢(素直を持つなら確率低下)
IF TALENT:坦率
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 16, 3
ELSE
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 16, 12
ENDIF
;傲嬌(反抗的を持つキャラは高確率・素直と同居しない・遺伝によらず完全ランダム)
IF TALENT:反抗的
	CALL RCHARA_TALENT_SINGLE, 18, 23
ELSEIF !TALENT:坦率
	CALL RCHARA_TALENT_SINGLE, 18, 5
ENDIF
;快感に素直、快感の否定
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 70, 71, 9, 5
;自制心(快感に素直と同居しない)
IF !TALENT:接受快感
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 20, 7
ENDIF
;好奇心、保守的
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 23, 24, 13, 6
;楽観的、悲観的
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 25, 26, 11, 7
;難以越過的底線
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 27, 6
;喜歡引人注目
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 28, 9
;貞操観念、貞操無頓着
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 30, 31, 10, 6
;圧抑(一部素質と同居しない)
IF !TALENT:傲慢 && !TALENT:好奇心 && !TALENT:楽観的 && !TALENT:喜歡引人注目 && !TALENT:接受快感
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 32, 6
ENDIF
;孤高(素直を持たないキャラ限定)
IF !TALENT:坦率
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 34, 6
ENDIF
;恥じらい、恥薄い(目立ちたがりを持つなら確率変動)
IF TALENT:喜歡引人注目
	CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 35, 36, 3, 13
ELSE
	CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 35, 36, 13, 7
ENDIF
;冷漠(一部素質と同居しない)
IF !TALENT:好奇心 && !TALENT:喜歡引人注目
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 21, 7
ENDIF
;感情缺乏(一部素質と同居しない)
IF !TALENT:胆怯 && !TALENT:傲慢 && !TALENT:好奇心 && !TALENT:喜歡引人注目 && !TALENT:害羞
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 22, 8
ENDIF
;解放(同居しない素質多数)
IF !TALENT:胆怯 && !TALENT:傲嬌 && !TALENT:自制心 && !TALENT:感情缺乏 && !TALENT:保守的 && !TALENT:悲観的
	IF !TALENT:難以越過的底線 && !TALENT:貞操観念 && !TALENT:圧抑 && !TALENT:孤高 && !TALENT:害羞 && !TALENT:否定快感
		CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 33, 12
	ENDIF
ENDIF
;痛みに強い、痛みに弱い
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 41, 40, 5, 4
;濡れやすい、濡れにくい
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 42, 43, 8, 5
;習得早い、習得遅い
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 50, 51, 5, 4
;舌頭霊活
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 52, 5
;容易自慰
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 60, 7
;汚臭鈍感、汚臭敏感
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 61, 62, 8, 8
;献身的
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 63, 9
;容易中毒
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 72, 8
;倒錯的
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 80, 8
;兩面通吃(女性の方が確率高め)
IF IS_MALE(TARGET)
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 81, 14
ELSE
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 81, 8
ENDIF

IF !TALENT:TARGET:兩面通吃
	;男嫌い、女嫌い(異性限定)
	IF IS_MALE(TARGET)
		CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 83, 9
	ELSE
		CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 82, 9
	ENDIF
ENDIF
;Ｓ気質、Ｍ気質
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 84, 85, 8, 8
;小悪魔(女性の方が確率高め)
IF IS_MALE(TARGET)
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 86, 3
ELSE
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 86, 10
ENDIF
;魅惑
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 87, 8
;謎之魅力
CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 88, 2
;回復早い、回復遅い
CALL CHILD_TALENT_OPPOSE, LOCAL:5, LOCAL:6, 111, 112, 5, 4
;幼稚
;CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 132, 6

;美脚
SIF !TALENT:性別 == 0
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 113, 12
;美臀
SIF !TALENT:性別 == 0
	CALL CHILD_TALENT_SINGLE, LOCAL:5, LOCAL:6, 114, 12

;父親が特殊な場合の処理
;ears and tail determination reworked and added monkey.
;now ancestry is factored in to the overall chance.
;45% from mother, 45% from father, 25% bonus chance from ancestor.
IF GROUPMATCH(CFLAG:父親, GET_SPERM_ID("犬"), GET_SPERM_ID("豚"), GET_SPERM_ID("馬"), GET_SPERM_ID("猿"))
	TALENT:動物耳 = 1
	TALENT:尾巴 = 1
ELSE
	LOCAL:0 = LINEAGE_TO_FIXED(TARGET)
	EAR = 0
	TAIL = 0
	IF LOCAL:0 >= 0
		EAR += TALENT:(LOCAL:0):動物耳 * 25
		TAIL += TALENT:(LOCAL:0):尾巴 * 25
	ENDIF
	IF LOCAL:5 >= 0
		EAR += TALENT:(LOCAL:5):動物耳 * 45
		TAIL += TALENT:(LOCAL:5):尾巴 * 45
	ENDIF

	IF LOCAL:6 >= 0
		EAR += TALENT:(LOCAL:6):動物耳 * 45
		TAIL += TALENT:(LOCAL:6):尾巴 * 45
	ENDIF
	TALENT:動物耳 = EAR > RAND:100
	TALENT:尾巴 = TAIL > RAND:100
ENDIF


;成長後の[幼稚]を退避し、固定で幼稚を付与
;Removed earlier genetic call for 132(Child's Mind)(幼稚)
;now ancestry is factored in to the overall chance.
;45% from mother, 45% from father, 25% bonus chance from ancestor.
LOCAL:0 = LINEAGE_TO_FIXED(TARGET)
LOCAL:1 = 0
SIF LOCAL:0 >= 0
	LOCAL:1 += (TALENT:(LOCAL:0):成長後幼稚 || (TALENT:(LOCAL:0):幼稚 && !TALENT:(LOCAL:0):幼兒)) * 25
SIF LOCAL:5 >= 0
	LOCAL:1 += (TALENT:(LOCAL:5):成長後幼稚 || (TALENT:(LOCAL:5):幼稚 && !TALENT:(LOCAL:5):幼兒)) * 45
SIF LOCAL:6 >= 0
	LOCAL:1 += (TALENT:(LOCAL:6):成長後幼稚 || (TALENT:(LOCAL:6):幼稚 && !TALENT:(LOCAL:6):幼兒)) * 45
TALENT:成長後幼稚 = LOCAL:1 > RAND:100
TALENT:幼稚 = 1

;■敏鈍感素質の決定(ランダム性高め)
LOCAL:1 = RAND:100
IF LOCAL:5 >= 0 && LOCAL:1 < 30
	FOR LOCAL:0, 101, 111
		TALENT:(LOCAL:0) = TALENT:(LOCAL:5):(LOCAL:0)
	NEXT
	IF LOCAL:1 < 8
		LOCAL:2 = RAND:10 + 101
		TALENT:(LOCAL:2) = 1
	ELSEIF LOCAL:1 < 25
		LOCAL:2 = RAND:10 + 101
		TALENT:(LOCAL:2) = 0
	ENDIF
	CALL KILL_INCOMPATIBLE_SENSE()
ELSEIF LOCAL:6 >= 0 && LOCAL:1 < 60
	FOR LOCAL:0, 101, 111
		TALENT:(LOCAL:0) = TALENT:(LOCAL:6):(LOCAL:0)
	NEXT
	IF LOCAL:1 < 38
		LOCAL:2 = RAND:10 + 101
		TALENT:(LOCAL:2) = 1
	ELSEIF LOCAL:1 < 55
		LOCAL:2 = RAND:10 + 101
		TALENT:(LOCAL:2) = 0
	ENDIF
	CALL KILL_INCOMPATIBLE_SENSE()
ELSE
	;ランダムに敏鈍感素質を設定
	CALL RANDOM_CHARA_SENSE
ENDIF

;両親の情報からバストサイズを設定
LOCAL:0 = RAND:100
IF LOCAL:6 >= 0
	SELECTCASE GET_BUSTSIZE(LOCAL:6) - CFLAG:(LOCAL:6):妊娠時バストサイズ増加
		CASE -2
			TALENT:成長後胸部 = RAND(-2, 1)
		CASE -1
			TALENT:成長後胸部 = RAND(-2, 2)
		CASE 0
			TALENT:成長後胸部 = RAND(-2, 2)
		CASE 1
			TALENT:成長後胸部 = RAND(-1, 2)
		CASE 2
			TALENT:成長後胸部 = RAND(-1, 3)
	ENDSELECT
ELSE
	CALL RANDOM_CHARA_BUSTSIZE
	TALENT:成長後胸部 = GET_BUSTSIZE(TARGET)
	CALL SET_BUSTSIZE(TARGET, -2)
ENDIF

LOCAL:0 = RAND:100
IF LOCAL:6 >= 0
	SELECTCASE GET_HIPSIZE(LOCAL:6)
		CASE -2
			TALENT:成長後ヒップ = RAND(-2, 1)
		CASE -1
			TALENT:成長後ヒップ = RAND(-2, 2)
		CASE 0
			TALENT:成長後ヒップ = RAND(-2, 2)
		CASE 1
			TALENT:成長後ヒップ = RAND(-1, 2)
		CASE 2
			TALENT:成長後ヒップ = RAND(-1, 3)
	ENDSELECT
ELSE
	CALL RANDOM_CHARA_HIPSIZE
	TALENT:成長後ヒップ = GET_HIPSIZE(TARGET)
	CALL SET_HIPSIZE(TARGET, -2)
ENDIF




;両親の情報から性格を決定
LOCAL:0 = RAND:100
IF LOCAL:5 >= 0 && TALENT:(LOCAL:5):性格 != 0 && LOCAL:0 < 35
	TALENT:性格 = TALENT:(LOCAL:5):性格
ELSEIF LOCAL:6 >= 0 && TALENT:(LOCAL:6):性格 != 0 && LOCAL:0 < 70
	TALENT:性格 = TALENT:(LOCAL:6):性格
ELSE
	;性格をランダムに決定
	CALL SET_CHARACTER(TARGET)
ENDIF

;髪色・髪の長さの決定
CALL SET_HAIR(TARGET)

TALENT:TARGET:Ｖ緊緻度 = GET_DEFAULT_TIGHTNESS("緊閉")
TALENT:TARGET:Ａ緊緻度 = GET_DEFAULT_TIGHTNESS("緊閉")


ABL:野心 = RAND(30, 71)

SIF TALENT:反抗的
	ABL:野心 += 5
SIF TALENT:堅強
	ABL:野心 += 5
SIF TALENT:自尊心高
	ABL:野心 += 7
SIF TALENT:傲慢
	ABL:野心 += 3
SIF TALENT:好奇心
	ABL:野心 += 3
SIF TALENT:孤高
	ABL:野心 += 15
SIF TALENT:胆怯
	ABL:野心 -= 5
SIF TALENT:坦率
	ABL:野心 -= 5
SIF TALENT:老実
	ABL:野心 -= 5
SIF TALENT:自制心
	ABL:野心 -= 5
SIF TALENT:冷漠
	ABL:野心 -= 5
SIF TALENT:自尊心低
	ABL:野心 -= 10
SIF TALENT:圧抑
	ABL:野心 -= 10
ABL:野心 = MAX(ABL:野心, 0)


;-------------------------
;子供に相反する２つの素質を付与するか決定する関数
;引数 0:父親のキャラ番号 1:母親のキャラ番号 2:素質番号A 3:素質番号B 4:素質Aのランダム時の付加確率 5:素質Bのランダム時の付加確率
;-------------------------
@CHILD_TALENT_OPPOSE(ARG:0, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5)
;各40%で片親に依存
IF RAND:10 < 8
	IF (ARG:0 >= 0 && RAND:2) || ARG:1 < 0
		TALENT:(ARG:2) = TALENT:(ARG:0):(ARG:2)
		TALENT:(ARG:3) = TALENT:(ARG:0):(ARG:3)
	ELSE
		TALENT:(ARG:2) = TALENT:(ARG:1):(ARG:2)
		TALENT:(ARG:3) = TALENT:(ARG:1):(ARG:3)
	ENDIF
;20%でランダム
ELSE
	LOCAL:0 = RAND:100
	IF LOCAL:0 < ARG:4
		TALENT:(ARG:2) = 1
	ELSEIF 99 - LOCAL:0 < ARG:5
		TALENT:(ARG:3) = 1
	ENDIF
ENDIF

;-------------------------
;子供に特定の素質を付与するか決定する関数
;引数 0:父親のキャラ番号 1:母親のキャラ番号 2:素質番号 3:ランダム時の付加確率
;-------------------------
@CHILD_TALENT_SINGLE(ARG:0, ARG:1, ARG:2, ARG:3)
;各40%で片親に依存
IF RAND:10 < 8
	IF (ARG:0 >= 0 && RAND:2) || ARG:1 < 0
		TALENT:(ARG:2) = TALENT:(ARG:0):(ARG:2)
	ELSE
		TALENT:(ARG:2) = TALENT:(ARG:1):(ARG:2)
	ENDIF
;20%でランダム
ELSE
	IF RAND:100 < ARG:3
		TALENT:(ARG:2) = 1
	ENDIF
ENDIF

;-------------------------
;子供にスキルを設定するでござるの巻
;-------------------------
@CHILD_SKILL_SETTING
#DIM 父
#DIM 母
#DIM ジャンル
#DIM スキルID
#DIM 試行回数
#DIM スキルNO群, SKILL_GENRE_NUM, MAX_SKILL_SLOT * 2
#DIM スキルID群, SKILL_GENRE_NUM, MAX_SKILL_SLOT * 2
#DIM スキルレベル群, SKILL_GENRE_NUM, MAX_SKILL_SLOT * 2
#DIM スキル数, SKILL_GENRE_NUM
#DIM スキル数合計
#DIM 習得確率
#DIM スキル位置
#DIM スキル習得数
#DIM スキル習得中止
#DIM スキルレベル
VARSET スキルNO群
VARSET スキルID群
VARSET スキルレベル群
VARSET スキル数
VARSET スキル数合計
父 = ID_TO_CHARA(CFLAG:父親)
母 = ID_TO_CHARA(CFLAG:母親)

;見つからなければキャンセル
SIF 父 < 0
	GOTO FATHER_CANCEL

FOR ジャンル, 0, SKILL_GENRE_NUM
	FOR スキルID, 0, MAX_SKILL_SLOT
		SIF スキル数:ジャンル >= MAX_SKILLS
			BREAK
		SIF SKILL_ID_SLOT:父:ジャンル:スキルID == -1
			CONTINUE
		SIF SKILL_NO_SLOT:父:ジャンル:スキルID == -1
			CONTINUE
		TRYCCALLFORM SKILL_{SKILL_NO_SLOT:父:ジャンル:スキルID}_%SKILL_GENRE_ENG:ジャンル%_{SKILL_ID_SLOT:父:ジャンル:スキルID}_EXIST
			スキルNO群:ジャンル:(スキル数:ジャンル) = SKILL_NO_SLOT:父:ジャンル:スキルID
			スキルID群:ジャンル:(スキル数:ジャンル) = SKILL_ID_SLOT:父:ジャンル:スキルID
			CALLFORM SKILL_{SKILL_NO_SLOT:父:ジャンル:スキルID}_%SKILL_GENRE_ENG:ジャンル%_{SKILL_ID_SLOT:父:ジャンル:スキルID}_LEVEL
			スキルレベル群:ジャンル:(スキル数:ジャンル) = RESULT
			スキル数:ジャンル ++
			スキル数合計 ++
		CATCH
		ENDCATCH
	NEXT
NEXT

$FATHER_CANCEL

;見つからなければキャンセル（別段問題はないが軽量化のため）
;あと父親がNO0の場合もキャンセル　これは汎用スキル覚えてしまうので

SIF 母 < 0
	GOTO MOTHER_CANCEL

FOR ジャンル, 0, SKILL_GENRE_NUM
	FOR スキルID, 0, MAX_SKILL_SLOT
		SIF スキル数:ジャンル >= MAX_SKILLS
			BREAK
		SIF SKILL_ID_SLOT:母:ジャンル:スキルID == -1
			CONTINUE
		SIF SKILL_NO_SLOT:母:ジャンル:スキルID == -1
			CONTINUE
		TRYCCALLFORM SKILL_{SKILL_NO_SLOT:母:ジャンル:スキルID}_%SKILL_GENRE_ENG:ジャンル%_{SKILL_ID_SLOT:母:ジャンル:スキルID}_EXIST
			スキルNO群:ジャンル:(スキル数:ジャンル) = SKILL_NO_SLOT:母:ジャンル:スキルID
			スキルID群:ジャンル:(スキル数:ジャンル) = SKILL_ID_SLOT:母:ジャンル:スキルID
			CALLFORM SKILL_{SKILL_NO_SLOT:母:ジャンル:スキルID}_%SKILL_GENRE_ENG:ジャンル%_{SKILL_ID_SLOT:母:ジャンル:スキルID}_LEVEL
			スキルレベル群:ジャンル:(スキル数:ジャンル) = RESULT
			スキル数:ジャンル ++
			スキル数合計 ++
		CATCH
		ENDCATCH
	NEXT
NEXT

$MOTHER_CANCEL

FOR ジャンル, 0, SKILL_GENRE_NUM
	スキル習得数 = 0
	スキル習得中止 = 0
	FOR スキルレベル, 5, 0, -1
		SELECTCASE スキルレベル
			CASE 5
				習得確率 = 30
			CASE 4
				習得確率 = 50
			CASE 3
				習得確率 = 70
			CASE 1, 2
				習得確率 = 90
		ENDSELECT
		FOR スキル位置, 0, スキル数:ジャンル
			SIF スキルレベル群:ジャンル:スキル位置 != スキルレベル
				CONTINUE
			SIF 習得確率 <= RAND:100
				CONTINUE
			CALL SKILL_LEARN(TARGET, ジャンル, スキルNO群:ジャンル:スキル位置, スキルID群:ジャンル:スキル位置)
			スキル習得数 ++
			IF スキル習得数 >= RAND(1, 6)
				スキル習得中止 = 1
				BREAK
			ENDIF
		NEXT
		SIF スキル習得中止
			BREAK
	NEXT
NEXT

;-------------------------
;子供にタグを設定するでござるの巻
;-------------------------
@CHILD_TAG_SETTING
#DIM 父
#DIM 母
父 = ID_TO_CHARA(CFLAG:父親)
母 = ID_TO_CHARA(CFLAG:母親)
SIF 父 < 0
	GOTO FATHER_CANCEL
FOR LOCAL, 0, MAX_TAG
    ;modded to exclude Hourai Immortal from being inheritable. It makes no canon sense and unkillable children are really annyoing.
	SIF TAG:父:LOCAL != -1 && RAND:2 && (TAG:父:LOCAL != タグ_蓬莱人)
		CALL ADD_TAG(TARGET, TAG:父:LOCAL)
NEXT

$FATHER_CANCEL

SIF 母 < 0
	RETURN
FOR LOCAL, 0, MAX_TAG
	SIF TAG:母:LOCAL != -1 && RAND:2 && (TAG:母:LOCAL != タグ_蓬莱人)
		CALL ADD_TAG(TARGET, TAG:母:LOCAL)
NEXT

