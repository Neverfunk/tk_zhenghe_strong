;共有されている選択可否判定と選択可能キャラ存在判定
;-------------------------------------------------
;メニューの選択可否とメニューの選択可能キャラ存在判定を
;SHOP_AVAILに保存する
;-------------------------------------------------
@CHECK_CHECKCHARA_SAVE
#DIM CHECK_SAVE_COUNTER
#DIM CHECKCHARA_SAVE_COUNTER

VARSET SHOP_AVAIL, 0

FOR CHECK_SAVE_COUNTER, 0, 99
	IF CHECK_SAVE_COUNTER <= 10 || CHECK_SAVE_COUNTER >= 90
		SHOP_AVAIL:(CHECK_SAVE_COUNTER) = 1
	ELSE
		RESULTS:0 '= ""
		TRYCALLFORM SHOP_LIFE_NAME{CHECK_SAVE_COUNTER}
		;メニュー名称が存在するなら
		IF RESULTS:0 != ""
			;選択可能キャラ存在判定
			FOR CHECKCHARA_SAVE_COUNTER, 0, CHARANUM
				RESULT = 0
				TRYCCALLFORM SHOP_LIFE_CHECKCHARA{CHECK_SAVE_COUNTER}(CHECKCHARA_SAVE_COUNTER)
					;このキャラは0:選択不可で非表示 1:選択可 2:選択不可色で表示のどれかが戻る
					SHOP_AVAIL:(CHECK_SAVE_COUNTER) = RESULT
				CATCH
					SHOP_AVAIL:(CHECK_SAVE_COUNTER) = 1
				ENDCATCH
				;存在判定がなかった、または、1選択可のキャラがいたらループを抜ける
				IF SHOP_AVAIL:(CHECK_SAVE_COUNTER) == 1
					BREAK
				ENDIF
			NEXT
			;メニューの選択可否判定
			RESULT = 0
			TRYCCALLFORM SHOP_LIFE_CHECK{CHECK_SAVE_COUNTER}
				;選択可否判定が存在し、不可の場合のみ上書きする
				IF RESULT == 0
					SHOP_AVAIL:(CHECK_SAVE_COUNTER) = 0
				ENDIF
				;選択可否判定が存在し、可だが選択可能キャラ判定は不可だったとき最終チェック
				;夜這いや手引きのような特殊な判定で使用
				IF RESULT == 1 && SHOP_AVAIL:(CHECK_SAVE_COUNTER) == 0
					TRYCCALLFORM SHOP_LIFE_CHECK_ADDITIONAL_CHECK{CHECK_SAVE_COUNTER}()
						SIF RESULT == 1
							SHOP_AVAIL:(CHECK_SAVE_COUNTER) = 1
					CATCH
					ENDCATCH
				ENDIF
			CATCH
			ENDCATCH
		ENDIF
	ENDIF
NEXT

;-------------------------------------------------
;行動済みチェック
;ARG:0　対象キャラ
;ARG:1　ARG:2が真だった時に返す値
;ARG:2　行動済み以外の条件式
;-------------------------------------------------
@CHECK91(ARG:0, ARG:1, ARG:2)
#FUNCTION
SIF ARG:2 <= 0
	RETURNF ARG:2
IF !CFLAG:(ARG:0):行動済み
	RETURNF ARG:2
ELSE
	IF CONFIG:13 == 1
		RETURNF 0
	ELSEIF ARG:2 == 1
		RETURNF ARG:1
	ELSE
		RETURNF ARG:2
	ENDIF
ENDIF

;-------------------------------------------------
;「閨に呼ぶ」の選択可能キャラ存在判定リスト１
;-------------------------------------------------
@SHOP_LIFE_CHECKCHARA_NEYA(ARG:0)
LOCAL:0 = TMP_COUNTRY_RELATION:(CFLAG:MASTER:所属):(CFLAG:(ARG:0):所属)
;捕虜として捕まっている場合
IF CFLAG:(ARG:0):捕虜先
	;非主人公、通常状態または育児中、合意、主人公勢力の捕虜かつ軟禁中
	RETURN CHECK91(ARG:0, 2, ARG:0 != MASTER && GROUPMATCH(CFLAG:(ARG:0):行動不能状態, 0, 2) && (TALENT:(ARG:0):合意 || TALENT:(ARG:0):親友) && CFLAG:(ARG:0):捕虜先 == CFLAG:MASTER:所属 && CFLAG:(ARG:0):軟禁中 == 1)
ELSE
	;捕虜でない、非主人公、通常状態または育児中、合意か親友ないし所属が特殊勢力なら対応する特殊勢力陥落素質持ち、同一勢力or共闘勢力or放浪リストにいる
	RETURN CHECK91(ARG:0, 2, ARG:0 != MASTER && GROUPMATCH(CFLAG:(ARG:0):行動不能状態, 0, 2) && (TALENT:(ARG:0):合意 || TALENT:(ARG:0):親友 || (IS_SP_COUNTRY(CFLAG:(ARG:0):所属) && GETBIT(TALENT:(ARG:0):特殊勢力陥落系, SP_COUNTRY_TO_CONST(CFLAG:(ARG:0):所属)))) && (LOCAL:0 >= 2 || FINDELEMENT(MEET_CANDIDATES, GET_ID(ARG:0)) != -1))
ENDIF

;-------------------------------------------------
;「能力表示」の選択可能キャラ存在判定リスト１
;-------------------------------------------------
@SHOP_LIFE_CHECKCHARA_NOURYOKU(ARG:0)
;同一勢力or共闘勢力or自国の捕虜
;最後に&& CFLAG:(ARG:0):捕虜先としてるのは、マスターが未所属捕虜で能力表示を開いた場合、「どこの勢力の捕虜にもなっていない」キャラが引っかかるから
SIF ARG:0 == MASTER
	RETURN 1
SELECTCASE FLAG:能力表示フィルタ
	;従来
	CASE 0
		RETURN TMP_COUNTRY_RELATION:(CFLAG:MASTER:所属):(CFLAG:(ARG:0):所属) >= 2 || (CFLAG:(ARG:0):捕虜先 == CFLAG:MASTER:所属 && CFLAG:(ARG:0):捕虜先)
	;自国のみ
	CASE 1
		RETURN CFLAG:MASTER:所属 && CFLAG:MASTER:所属 == CFLAG:(ARG:0):所属
	;捕虜も
	CASE 2
		RETURN CFLAG:MASTER:所属 && (CFLAG:MASTER:所属 == CFLAG:(ARG:0):所属 || CFLAG:MASTER:所属 == CFLAG:(ARG:0):捕虜先)
	;ぜんぶ
	CASE 3
		RETURN 1
ENDSELECT
RETURN 1

;-------------------------------------------------
;「手引させる」選択可能キャラ存在判定リスト２
;-------------------------------------------------
@SHOP_LIFE_CHECKCHARA_SUB_NAITSUU(ARG:0)
;捕虜でない、非主人公、通常状態または育児中、烙印、別勢力
SIF TMP_COUNTRY_IS_NEIBORING:(CFLAG:MASTER:所属):(CFLAG:(ARG:0):所属)
	RETURN CHECK91(ARG:0, 2, ARG:0 != MASTER && !CFLAG:(ARG:0):捕虜先 && GROUPMATCH(CFLAG:(ARG:0):行動不能状態, 0, 2) && TALENT:(ARG:0):烙印 && CFLAG:MASTER:所属 != CFLAG:(ARG:0):所属  && CFLAG:(ARG:0):行動不能状態 != 行動不能_子供)
RETURN 0

