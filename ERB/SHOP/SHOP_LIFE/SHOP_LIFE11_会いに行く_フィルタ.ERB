;-------------------------------------------------
;「会いに行く」の追加チェック
;-------------------------------------------------
@SHOP_LIFE_CHECK_ADDITIONAL_CHECK11()
#DIM フラグ
#DIM BACKUP_FILTER_MODE

; 「フィルタの条件に一致するキャラクターがいない場合にメニューが表示されなくなる」を防ぐ。
; いつでもメニューを表示するのであれば、RETURN 1 でいいんだけど。

BACKUP_FILTER_MODE = SHOP_LIFE_11_FILTER_MODE
SHOP_LIFE_11_FILTER_MODE = 0

フラグ = 0
FOR LOCAL, 0, CHARANUM
	RESULT = 0
	CALL SHOP_LIFE_CHECKCHARA11(LOCAL)
	;このキャラは0:選択不可で非表示 1:選択可 2:選択不可色で表示のどれかが戻る
	IF RESULT == 1
		フラグ = 1
		BREAK
	ENDIF
NEXT

SHOP_LIFE_11_FILTER_MODE = BACKUP_FILTER_MODE

RETURN フラグ

@SHOP_LIFE_11_GET_FILTER_MODE
#FUNCTIONS

SIF SHOP_LIFE_11_FILTER_MODE
	RETURNF "過濾" + TOSTR(SHOP_LIFE_11_FILTER_MODE)

RETURNF "過濾関閉"

@SHOP_LIFE_11_SET_FILTER
#DIMS NAM
#DIM DMY
#DIM VAL_NOW
#DIM FIRST_LINE
#DIM ITM
#DIM VAL
#DIM I1
#DIM I2

SIF !SHOP_LIFE_11_FILTER_MODE
	SHOP_LIFE_11_FILTER_MODE = 1

REDRAW 0

CALL SINGLE_DRAWLINE
PRINTFORML 過濾{SHOP_LIFE_11_FILTER_MODE}設定
CALL SINGLE_DRAWLINE
FIRST_LINE = LINECOUNT
$SHOW_LOOP

FOR LOCAL, 0, VARSIZE("SHOP_LIFE_11_FILTER", 1) + 1
	IF LOCAL == VARSIZE("SHOP_LIFE_11_FILTER", 1)
		PRINTL
		NAM = 一括設定
		VAL_NOW = -1
	ELSE
		DMY = SHOP_LIFE_11_GET_FILTER_ITEM(0, LOCAL, NAM)
		VAL_NOW = SHOP_LIFE_11_FILTER:(SHOP_LIFE_11_FILTER_MODE):LOCAL
	ENDIF
	SIF NAM == ""
		CONTINUE
	CALL PRINT_SELECT_BUTTON("  { 両方 }", LOCAL * 10 + 0, VAL_NOW == 0)
	CALL PRINT_SELECT_BUTTON("  {只有○}", LOCAL * 10 + 1, VAL_NOW == 1)
	CALL PRINT_SELECT_BUTTON("  {只有×}", LOCAL * 10 + 2, VAL_NOW == 2)
	PRINTFORML     %NAM%
NEXT
PRINTL
PRINTL [9] OK

$INPUT_LOOP
INPUT

ITM = RESULT / 10
VAL = RESULT % 10

IF RESULT == 9
	REDRAW 1
	RETURN
ELSEIF VAL >= 0 && VAL <= 2
	IF ITM >= 0 && ITM < VARSIZE("SHOP_LIFE_11_FILTER", 1)
		I1 = ITM
		I2 = ITM + 1
	ELSE
		I1 = 0
		I2 = VARSIZE("SHOP_LIFE_11_FILTER", 1)
	ENDIF
	FOR LOCAL, I1, I2
		SHOP_LIFE_11_FILTER:(SHOP_LIFE_11_FILTER_MODE):LOCAL = VAL
	NEXT
	CLEARLINE LINECOUNT - FIRST_LINE
	GOTO SHOW_LOOP
ENDIF

CLEARLINE 1
GOTO INPUT_LOOP

@SHOP_LIFE_11_GET_FILTER(CHARA)
#FUNCTION
#DIM CHARA
#DIMS NAM

SIF !SHOP_LIFE_11_FILTER_MODE
	RETURNF 1

FOR LOCAL, 0, VARSIZE("SHOP_LIFE_11_FILTER", 1)
	SELECTCASE SHOP_LIFE_11_FILTER:(SHOP_LIFE_11_FILTER_MODE):LOCAL
		CASE 1
			SIF !SHOP_LIFE_11_GET_FILTER_ITEM(CHARA, LOCAL, NAM) && NAM != ""
				RETURNF 0
		CASE 2
			SIF SHOP_LIFE_11_GET_FILTER_ITEM(CHARA, LOCAL, NAM) && NAM != ""
				RETURNF 0
	ENDSELECT
NEXT

RETURNF 1


@SHOP_LIFE_11_GET_FILTER_ITEM(CHARA, IDX, NAM)
#FUNCTION
#DIM CHARA
#DIM IDX
#DIMS REF NAM
#DIM FILT

; 呼び出し側の都合によっては、項目名だけしか使わないこともあるし、フィルタ結果だけしか使わないこともある。
; しかし、項目名とフィルタ結果はセットで記述したほうがわかりやすいと思う。

SELECTCASE IDX
	CASE 0
		NAM = 固定角色
		FILT = IS_TOHO_CHARA(CHARA)
	CASE 1
		NAM = 隨機(汎用)角色
		FILT = IS_RANDOM_CHARA(CHARA)
	CASE 2
		NAM = 孩子角色
		FILT = IS_CHILD(CHARA)
	CASE 3
		NAM = 特殊角色
		FILT = IS_SP_CHARA(CHARA)
	CASE 4
		; 恋慕も服従も無しで恋人や烙印が付く可能性もあるので、@IS_LOVERや@IS_SLAVEは使わないことにする
		NAM = 恋慕或服従または主人
		FILT = TALENT:CHARA:恋慕 || TALENT:CHARA:服従 || TALENT:CHARA:主人
	CASE 5
		; OR検索ができれば、CASE 5 は不要のはずなんだけどね。CASE 6 と CASE 7 のORで実現できるから。
		NAM = 向特殊勢力的陥落
		FILT = TALENT:CHARA:特殊勢力陥落系
	CASE 6
		NAM = （主人公所属勢力）向特殊勢力的陥落
		FILT = IS_SP_COUNTRY(CFLAG:MASTER:所属) && GETBIT(TALENT:CHARA:特殊勢力陥落系, SP_COUNTRY_TO_CONST(CFLAG:MASTER:所属))
	CASE 7
		NAM = （主人公所属勢力以外）向特殊勢力的陥落
		FILT = 0
		FOR LOCAL, 0, MAX_SP_COUNTRY
			IF LOCAL != SP_COUNTRY_TO_CONST(CFLAG:MASTER:所属) && GETBIT(TALENT:CHARA:特殊勢力陥落系, LOCAL)
				FILT = 1
				BREAK
			ENDIF
		NEXT
	CASE 8
		NAM = 捕虜
		FILT = CFLAG:CHARA:捕虜先
	CASEELSE
		NAM = 
		FILT = 0
ENDSELECT

RETURNF FILT

