;■関数デザイン回り

;============================================================================== 
;◆RGBカラーを色名単語で指定する関数（使用頻度の高そうな色のみ）
;　使い方：　SETCOLOR COLOR("レッド")
;　tohoK参考にしました。感謝。
;============================================================================== 
@COLOR(ARGS:0)
	#FUNCTION

	;基本デザインカラー
	;　選択中メニューの着色等
	IF ARGS:0 == "メインカラー"
		RETURNF 0x47B0A0
	;　カテゴリータイトル色等
	ELSEIF ARGS:0 == "サブカラー"
		RETURNF 0x888E7E
	;　選択不可色等、使用不可であることを示す
	ELSEIF ARGS:0 == "ダークグレー"
		RETURNF 0x303030
	;　時間やムードのデフォルト色等、不可ではないがオフを示す
	ELSEIF ARGS:0 == "グレー"
		RETURNF 0x505050
	;　注釈等、注目して欲しい部分が他にあるときの引き算色
	ELSEIF ARGS:0 == "シルバー"
		RETURNF 0x808992
	;　基本的な強調色
	ELSEIF ARGS:0 == "オレンジ"
		RETURNF 0xCE7A19
	;　基本的な強調色と対立する色（現在のメインカラーに近いため注意）
	ELSEIF ARGS:0 == "シアン"
		RETURNF 0x47B3A5
	;　注意喚起・最も目立つ色
	ELSEIF ARGS:0 == "イエロー"
		RETURNF 0xCFBF30
	;　強調色が足りない時用
	ELSEIF ARGS:0 == "オリーブ"
		RETURNF 0x8B9E53
	;補佐色
	ELSEIF ARGS:0 == "ダークオレンジ"
		RETURNF 0xC66630
	ELSEIF ARGS:0 == "ダークイエロー"
		RETURNF 0x999939
	ELSEIF ARGS:0 == "ダークレッド"
		RETURNF 0x942C2C
	;深陥落カラー
	ELSEIF ARGS:0 == "レッド"
		RETURNF 0xD04040
	ELSEIF ARGS:0 == "グリーン"
		RETURNF 0x609040
	ELSEIF ARGS:0 == "パープル"
		RETURNF 0x8970DF
	;浅陥落カラー
	ELSEIF ARGS:0 == "ピンク"
		RETURNF 0xD97980
	ELSEIF ARGS:0 == "イエローグリーン"
		RETURNF 0x809940
	ELSEIF ARGS:0 == "ブルー"
		RETURNF 0x6070DC
	;既成事実Lv2誓約カラー
	ELSEIF ARGS:0 == "ライトピンク"
		RETURNF 0xF09CA3
	ELSEIF ARGS:0 == "ライトグリーン"
		RETURNF 0x90A060
	ELSEIF ARGS:0 == "ライトブルー"
		RETURNF 0x7090D0
	;既成事実Lv3情交カラー
	ELSEIF ARGS:0 == "パステルピンク"
		RETURNF 0xE5ABBE
	ELSEIF ARGS:0 == "パステルグリーン"
		RETURNF 0xA0A966
	ELSEIF ARGS:0 == "パステルブルー"
		RETURNF 0x87A8DB
	;暴君に服従（服従ルートはブルー～パープル、少しずらしてシアン系）
	ELSEIF ARGS:0 == "暴君カラー"
		RETURNF 0x50A0A0
	;好敵手に恋慕（恋慕ルートはピンク～レッド、少しずらしてオレンジ系）
	ELSEIF ARGS:0 == "好敵手カラー"
		RETURNF 0xCC9930
	;小町を愛玩（愛玩ルートはグリーン～イエローグリーン、少しずらしてミントグリーン系）
	ELSEIF ARGS:0 == "小町カラー"
		RETURNF 0x70BB90
	;シルバーのバリエーション
	ELSEIF ARGS:0 == "シルバーブルー"
		RETURNF 0x90A9BF
	;季節
	ELSEIF ARGS:0 == "春"
		RETURNF 0xE597B2
	ELSEIF ARGS:0 == "夏"
		RETURNF 0x72AE66
	ELSEIF ARGS:0 == "秋"
		RETURNF 0xC53D43
	ELSEIF ARGS:0 == "冬"
		RETURNF 0x99B3DB
	;天候
	ELSEIF ARGS:0 == "雪天"
		RETURNF 0x98AAAB
	ELSEIF ARGS:0 == "曇天"
		RETURNF 0x708E94
	ELSEIF ARGS:0 == "雨天"
		RETURNF 0x5383C3
	ELSEIF ARGS:0 == "晴天"
		RETURNF 0xD9D09F
	;マップ用
	ELSEIF ARGS:0 == "土"
		RETURNF 0x302010
	ELSEIF ARGS:0 == "樹"
		RETURNF 0x555555
	ELSEIF ARGS:0 == "畳床"
		RETURNF 0x363910
	ELSEIF ARGS:0 == "板壁"
		RETURNF 0x736950
	ELSEIF ARGS:0 == "板床"
		RETURNF 0x332C16
	ELSEIF ARGS:0 == "石壁"
		RETURNF 0x606066
	ELSEIF ARGS:0 == "石床"
		RETURNF 0x202029
	ELSEIF ARGS:0 == "水場"
		RETURNF 0x105060
	ELSEIF ARGS:0 == "春の樹"
		RETURNF 0xB38699
	ELSEIF ARGS:0 == "夏の樹"
		RETURNF 0x0e6953
	ELSEIF ARGS:0 == "秋の樹"
		RETURNF 0x652D30
	ELSEIF ARGS:0 == "冬の樹"
		RETURNF 0x39435B
	ELSEIF ARGS:0 == "春の土"
		RETURNF 0x283020
	ELSEIF ARGS:0 == "夏の土"
		RETURNF 0x0e3129
	ELSEIF ARGS:0 == "秋の土"
		RETURNF 0x403029
	ELSEIF ARGS:0 == "冬の土"
		RETURNF 0x262C39
	ELSEIF ARGS:0 == "春の夜の樹"
		RETURNF 0x3f212d
	ELSEIF ARGS:0 == "夏の夜の樹"
		RETURNF 0x031611
	ELSEIF ARGS:0 == "秋の夜の樹"
		RETURNF 0x2b0508
	ELSEIF ARGS:0 == "冬の夜の樹"
		RETURNF 0x1e2330
	ELSEIF ARGS:0 == "春の夜の土"
		RETURNF 0x101c0a
	ELSEIF ARGS:0 == "夏の夜の土"
		RETURNF 0x051c1a
	ELSEIF ARGS:0 == "秋の夜の土"
		RETURNF 0x0f0b09
	ELSEIF ARGS:0 == "冬の夜の土"
		RETURNF 0x0d0f14

	;デフォルトカラー
	ELSEIF ARGS:0 == "デフォルト"
		RETURNF GETDEFCOLOR()
	;エラー回避
	ELSE
		RETURNF GETDEFCOLOR()
	ENDIF

;============================================================================== 
;◆多色使いのテキストを一行で書く関数
;　デフォルトカラーは指定不要
;　CALL COLOR_PRINTFORML("オレンジで表示", COLOR("オレンジ"))
;　CALL COLOR_PRINTFORML("ここはいつも通り", , "ここはオレンジ色", COLOR("オレンジ"), "ここもいつも通り", , "ここはブルー", COLOR("ブルー"))
;============================================================================== 
@COLOR_PRINT(テキスト１, カラー１, テキスト２, カラー２, テキスト３, カラー３, テキスト４, カラー４, テキスト５, カラー５, テキスト６, カラー６, テキスト７, カラー７, テキスト８, カラー８, テキスト９, カラー９, テキスト１０, カラー１０)
	#DIMS テキスト１
	#DIM カラー１
	#DIMS テキスト２
	#DIM カラー２
	#DIMS テキスト３
	#DIM カラー３
	#DIMS テキスト４
	#DIM カラー４
	#DIMS テキスト５
	#DIM カラー５
	#DIMS テキスト６
	#DIM カラー６
	#DIMS テキスト７
	#DIM カラー７
	#DIMS テキスト８
	#DIM カラー８
	#DIMS テキスト９
	#DIM カラー９
	#DIMS テキスト１０
	#DIM カラー１０
	IF テキスト１ != ""
		IF カラー１
			SETCOLOR カラー１
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト１%
	ENDIF
	IF テキスト２ != ""
		IF カラー２
			SETCOLOR カラー２
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト２%
	ENDIF
	IF テキスト３ != ""
		IF カラー３
			SETCOLOR カラー３
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト３%
	ENDIF
	IF テキスト４ != ""
		IF カラー４
			SETCOLOR カラー４
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト４%
	ENDIF
	IF テキスト５ != ""
		IF カラー５
			SETCOLOR カラー５
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト５%
	ENDIF
	IF テキスト６ != ""
		IF カラー６
			SETCOLOR カラー６
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト６%
	ENDIF
	IF テキスト７ != ""
		IF カラー７
			SETCOLOR カラー７
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト７%
	ENDIF
	IF テキスト８ != ""
		IF カラー８
			SETCOLOR カラー８
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト８%
	ENDIF
	IF テキスト９ != ""
		IF カラー９
			SETCOLOR カラー９
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト９%
	ENDIF
	IF テキスト１０ != ""
		IF カラー１０
			SETCOLOR カラー１０
		ELSE
			SETCOLOR GETDEFCOLOR()
		ENDIF
		PRINTFORM %テキスト１０%
	ENDIF
	SETCOLOR GETDEFCOLOR()

;============================================================================== 
;◆多色使いのテキストを一行で書く関数
;　デフォルトカラーは指定不要
;　CALL COLOR_PRINTFORML("オレンジで表示", COLOR("オレンジ"))
;　CALL COLOR_PRINTFORML("ここはいつも通り", , "ここはオレンジ色", COLOR("オレンジ"), "ここもいつも通り", , "ここはブルー", COLOR("ブルー"))
;============================================================================== 
@COLOR_PRINTL(テキスト１, カラー１, テキスト２, カラー２, テキスト３, カラー３, テキスト４, カラー４, テキスト５, カラー５, テキスト６, カラー６, テキスト７, カラー７, テキスト８, カラー８, テキスト９, カラー９, テキスト１０, カラー１０)
#DIMS テキスト１
#DIM カラー１
#DIMS テキスト２
#DIM カラー２
#DIMS テキスト３
#DIM カラー３
#DIMS テキスト４
#DIM カラー４
#DIMS テキスト５
#DIM カラー５
#DIMS テキスト６
#DIM カラー６
#DIMS テキスト７
#DIM カラー７
#DIMS テキスト８
#DIM カラー８
#DIMS テキスト９
#DIM カラー９
#DIMS テキスト１０
#DIM カラー１０
CALL COLOR_PRINT(テキスト１, カラー１, テキスト２, カラー２, テキスト３, カラー３, テキスト４, カラー４, テキスト５, カラー５, テキスト６, カラー６, テキスト７, カラー７, テキスト８, カラー８, テキスト９, カラー９, テキスト１０, カラー１０)
PRINTL

@COLOR_PRINTW(テキスト１, カラー１, テキスト２, カラー２, テキスト３, カラー３, テキスト４, カラー４, テキスト５, カラー５, テキスト６, カラー６, テキスト７, カラー７, テキスト８, カラー８, テキスト９, カラー９, テキスト１０, カラー１０)
#DIMS テキスト１
#DIM カラー１
#DIMS テキスト２
#DIM カラー２
#DIMS テキスト３
#DIM カラー３
#DIMS テキスト４
#DIM カラー４
#DIMS テキスト５
#DIM カラー５
#DIMS テキスト６
#DIM カラー６
#DIMS テキスト７
#DIM カラー７
#DIMS テキスト８
#DIM カラー８
#DIMS テキスト９
#DIM カラー９
#DIMS テキスト１０
#DIM カラー１０
CALL COLOR_PRINT(テキスト１, カラー１, テキスト２, カラー２, テキスト３, カラー３, テキスト４, カラー４, テキスト５, カラー５, テキスト６, カラー６, テキスト７, カラー７, テキスト８, カラー８, テキスト９, カラー９, テキスト１０, カラー１０)
PRINTW

;============================================================================== 
;◆バーとして数値を表示する関数（Kh）
;最小値は0とする
;ARG:0=最小値 ARG:1=バーの表示上の最大値、ARG:2=バーの値、ARG:3=バーの幅、ARG:4=バーの色(オン)、ARG:5=バーの色(オフ)
;============================================================================== 
@PRINT_KANNRAKU_BAR(ARG:0 = 0, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5)
	#DIM Ｈ = 0
	#DIM Ｓ = 0
	#DIM Ｖ = 0
	#DIM ひとつのマス = 0
	#DIM バーの幅 = 0
	#DIM バーの値 = 0
	#DIM 値マス = 0
	#DIM 最大値 = 0

	;カラー初期値調整
	Ｈ = RGB_TO_H(ARG:4) - 15
	Ｓ = RGB_TO_S(ARG:4) - 5
	Ｖ = RGB_TO_V(ARG:4) - 20
	IF Ｈ <= 0
		Ｈ = 359 + Ｈ
	ENDIF
	IF Ｓ <= 0
		Ｓ = 0
	ENDIF
	IF Ｖ <= 0
		Ｖ = 0
	ENDIF

	;バーの初期値調整
	最大値 = ARG:1
	バーの値 = ARG:2
	バーの幅 = ARG:3
	ひとつのマス = 0
	値マス = 0

	;もしバーの表示上の最大値がバー幅より小さいなら
	IF 最大値 < バーの幅
		最大値 = バーの幅
	ENDIF

	;バーの値が一つのマスより小さいなら
	IF バーの値 < ひとつのマス
		バーの値 = ひとつのマス
	ENDIF

	;バーひとつのマスの値を求める 最大値 ÷ バーの幅
	ひとつのマス = 最大値 / バーの幅

	;値は何マス分かを求める
	;（値 ー 最小値）÷ バーひとつのマスの値
	値マス = バーの値 / ひとつのマス
	;０マス以下だったら０マスに
	IF 値マス < 0
		値マス = 0
	ENDIF

	;色相変化のリズムカウント用
	LOCAL:3 = 0

	;バーの幅まで繰り返し
	FOR LOCAL:0, 0, バーの幅
		;値マスの数以下なら色付け
		IF LOCAL:0 <= 値マス
			SETCOLOR HSV_TO_RGB(Ｈ, Ｓ, Ｖ)
			PRINT_RECT 0, 30, 30, 45
			LOCAL:3 += 4
			;3回に1色相変化
			IF LOCAL:3 % 2 == 0
				Ｈ += 1
				IF Ｈ >= 360
					Ｈ = 1
				ENDIF
				Ｖ += 1
				IF Ｖ >= 100
					Ｖ = 100
				ENDIF
			ENDIF
		;指定されたマスの数以上ならグレー
		ELSE
			SETCOLOR ARG:5
			PRINT_RECT 0, 40, 30, 20
		ENDIF
	NEXT

	RESETCOLOR

	RETURN 0

;============================================================================== 
;◆色つきのラインを指定する CALL COLOR_LINE(0, "グレー")
;ARG:1は線の太さ、0細、1そこそこ、2太
;============================================================================== 
@COLOR_LINE(ARG:0, 指定カラー = カラー_ダークグレー)
	#DIM 指定カラー = GETDEFCOLOR()
	#DIM Ｈ = 0
	#DIM Ｓ = 0
	#DIM Ｖ = 0
	#DIM グラデーション開始 = 0
	#DIM 線の太さ = 0

	;フォントのリセット
	CALL SETFONT_MEYRYOKE
	;カウンタ
	LOCAL:0 = 0
	;色の明るさを最大値として指定する用
	LOCAL:1 = 0
	;カウンタ２
	LOCAL:3 = 0


	IF ARG:0 == 2
		線の太さ = 30
	ELSEIF ARG:0 == 1
		線の太さ = 20
	ELSE
		線の太さ = 10
	ENDIF

	;カラー調整
	Ｈ = RGB_TO_H(指定カラー)
	Ｓ = RGB_TO_S(指定カラー)
	Ｖ = RGB_TO_V(指定カラー)

	;一行に入る文字数は49文字分rectは全角１文字が100
	グラデーション開始 = 4800 - Ｖ / 5 * 100

	IF グラデーション開始 <= 0
		グラデーション開始 = 100
	ENDIF

	;グラデーション開始する位置まで同じ色
	SETCOLOR HSV_TO_RGB(Ｈ, Ｓ, Ｖ)
	PRINT_RECT 0, 50-(線の太さ/2), グラデーション開始, 線の太さ

	;最大値
	LOCAL:1 = Ｖ / 5
	FOR LOCAL:0, 0, LOCAL:1
		SETCOLOR HSV_TO_RGB(Ｈ, Ｓ, Ｖ)
		PRINT_RECT 0, 50-(線の太さ/2), 100, 線の太さ
		LOCAL:3 += 1
		;3回に1色相変化
		IF LOCAL:3 % 3 == 0
			Ｈ += 1
			IF Ｈ >= 360
				Ｈ = 1
			ENDIF
		ENDIF
		Ｖ -= 5
	NEXT

	PRINTL 

	RESETCOLOR

	RETURN 0

;============================================================================== 
;◆フォント・emuera.configの指定がＭＳ ゴシック（デフォルトの指定）の場合
;　MeiryoKe_Consoleがインストールされていたらセットする CALL SETFONT_MEYRYOKE
;============================================================================== 
@SETFONT_MEYRYOKE
	;デフォルト指定のフォントをチェック
	GETFONT
	;プレイヤーにより変更されていなければ
	IF RESULTS == "ＭＳ ゴシック"
		;インストール確認
		CHKFONT "MeiryoKe_Console"
		;存在したら
		IF RESULT
			SETFONT "MeiryoKe_Console"
		ENDIF
	ENDIF

	RETURN 0

;============================================================================== 
;◆タイトルラベル CALL TITLE_LABEL_START("タイトル", 1 , "画像名", "説明文簡易表示")
;ARGS:0 タイトル
; ARG:1 改行＆末尾のライン表示したくないときはARG:1を1にして
;       改行とラインは別に表示する（タイトルの横にボタンを置くときやフォントの色変えたいときの指定）
; ARG:2 画像パターン（省略するとデフォルト・画像を変えたい場合に指定する・現状なし）
;============================================================================== 
@TITLE_LABEL_START(ARGS:0, ARG:1, ARGS:2, ARGS:3)
	CALL COLOR_LINE(0, GETDEFCOLOR())
	PRINT_SPACE 20
	IF ARG:1
		PRINTFORM %ARGS:0%
	ELSE
		PRINTFORM %ARGS:0%
		IF ARGS:3 != ""
			SETCOLOR COLOR("シルバー")
			PRINTFORML  %ARGS:3%
			RESETCOLOR
		ENDIF
		CALL COLOR_LINE
	ENDIF

	RETURN 0

;============================================================================== 
;◆タイトルラベル・汎用カテゴリタイトル表示   CALL TITLE_CATEGORY_GENERAL("親交", 4)
;============================================================================== 
@TITLE_CATEGORY_GENERAL(ARGS:0, ARG:1)
	PRINT_SPACE 20
	SETCOLOR COLOR("サブカラー")
	LOCALS:0 = ◇%ARGS:0%◇
	PRINTFORM %LOCALS:0, ARG:1, LEFT%
	RESETCOLOR
	PRINT_SPACE 80

;============================================================================== 
;◆タイトルラベル・指定されたテキスト(ARGS:0)を指定された文字数(ARG:1)になるまでスペースで埋めて-をつける
;　コンフィグとかヘルプのデザイン整理用
;　%FILL_SPACE("テキスト", 24)%
;============================================================================== 
@FILL_SPACE(ARGS:0, ARG:1)
	#FUNCTIONS
	;指定されたテキストの文字数をチェック
	LOCALS:0 = %ARGS:0%
	STRLENFORM %LOCALS:0%
	LOCAL:1 = RESULT:0

	FOR LOCAL:0, 0, ARG:1 - LOCAL:1
		LOCALS:0 += " "
	NEXT
	LOCALS:0 = %LOCALS:0%-

	RETURNF LOCALS:0

